import BotLogic from "./botLogic";
import TrelloApiConnector from "./trelloApiConnector";

export default class BotLogicStream extends BotLogic  {
    public async activate(body: any): Promise<void> {
        const userInput = body.message.text;
        const chatId = body.message.chat.id.toString();
        const username = body.message.from.username;

        if (this.validator.hasEventBodyMessage(body)) {
            if (userInput === "/start") {
                this.bot.telegram.sendMessage(
                    chatId,
                    `üëã –ü—Ä–∏–≤–µ—Ç. –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä–æ IT –∫–∞—Ä—å–µ—Ä—É –≤ –ï–≤—Ä–æ–ø–µ –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –Ω–µ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º. –í–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.`
                  )
            } else {
                await this.trelloHandler(userInput, username)
                this.bot.telegram.sendMessage(
                    chatId,
                    `–í–æ–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –£–≤–∏–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∏–º–µ! –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à Instagram: https://instagram.com/geek.exp`)
                this.bot.telegram.sendMessage(chatId,
                    `/**\n  * –ü—Å—Å—Å...–µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–∞, —Ç–æ –≤–æ–ø—Ä–æ—Å —É –Ω–∞—Å: –∫–∞–∫ —Ç—ã –≤—ã–∂–∏–≤–∞–µ—à—å –Ω–∞ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –±–µ–∑ –≤–∏–¥–µ–æ –ø—Ä–æ –∫–æ—Ç–∏–∫–æ–≤? ü§î\n  */`)
            }
            return
        }
    }

    /**
     * 
     * @param input 
     * @param user 
     */

    private async trelloHandler(input: string, user: string) {
        const trelloKey = process.env.TRELLO_KEY
        const trelloToken = process.env.TRELLO_TOKEN
        const trelloListId = process.env.TRELLO_LIST_ID
        if (typeof trelloKey === "undefined" || typeof trelloToken === "undefined" || typeof trelloListId === "undefined") {
            const errText = "Error: trello credentials are not set"
            console.error(errText)
            throw Error(errText)
        }
        const trelloConnector = new TrelloApiConnector(trelloKey!, trelloToken!)
        return await trelloConnector.addCard(trelloListId!, input, user)
    }
}